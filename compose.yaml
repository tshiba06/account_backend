services:
  server:
    build:
      context: .
      # 本番などはこちら
      # target: final
      target: develop
    environment:
      POSTGRES_HOST: host.docker.internal
      POSTGRES_PORT: 15432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4318"
    ports:
      - 18080:8080
    networks:
      - jaeger
      - monitoring
    depends_on:
      - db
      - jaeger

  db:
    image: postgres
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: Asia/Tokyo
      PGTZ: Asia/Tokyo
    ports:
      - 15432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    ports:
      - "55680:55680"
    volumes:
      - ./telemetry/otel/collector-config.yaml:/etc/otel-config.yaml
    command: ["--config", "/etc/otel-config.yaml"]
    networks:
      - jaeger
      - monitoring

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
      - "4318:4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    networks:
      - jaeger
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus-data:/prometheus
      - ./telemetry/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
      - loki

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - monitoring
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./telemetry/loki/config.yaml:/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    networks:
      - monitoring
    volumes:
      - /var/log:/var/log
      - ./telemetry/promtail/config.yaml:/etc/promtail/config.yml

networks:
  jaeger:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  db-data:
  prometheus-data:
